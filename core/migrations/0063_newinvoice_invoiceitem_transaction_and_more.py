# Generated by Django 5.1.7 on 2025-09-30 12:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0062_carrierservice_carservice_lineservice_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Уникальный номер инвойса (генерируется автоматически)', max_length=50, unique=True, verbose_name='Номер инвойса')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата выставления')),
                ('due_date', models.DateField(help_text='Дата, до которой должен быть оплачен инвойс', verbose_name='Срок оплаты')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Сумма всех позиций без дополнительных сборов', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Подытог')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Скидка')),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Налог')),
                ('total', models.DecimalField(decimal_places=2, default=0, help_text='Итоговая сумма инвойса', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Итого к оплате')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Сумма, которая уже оплачена', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Оплачено')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('ISSUED', 'Выставлен'), ('PARTIALLY_PAID', 'Частично оплачен'), ('PAID', 'Оплачен'), ('OVERDUE', 'Просрочен'), ('CANCELLED', 'Отменен')], default='DRAFT', max_length=20, verbose_name='Статус')),
                ('notes', models.TextField(blank=True, help_text='Дополнительная информация об инвойсе', verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices_new', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('issuer', models.ForeignKey(help_text='Компания, которая выставила инвойс (обычно Caromoto Lithuania)', on_delete=django.db.models.deletion.PROTECT, related_name='issued_invoices_new', to='core.company', verbose_name='Выставитель')),
                ('recipient_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_invoices_new', to='core.carrier', verbose_name='Перевозчик-получатель')),
                ('recipient_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_invoices_new', to='core.client', verbose_name='Клиент-получатель')),
                ('recipient_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_invoices_new', to='core.line', verbose_name='Линия-получатель')),
                ('recipient_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_invoices_new', to='core.warehouse', verbose_name='Склад-получатель')),
            ],
            options={
                'verbose_name': 'Инвойс (новая система)',
                'verbose_name_plural': 'Инвойсы (новая система)',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text="Например: 'Хранение авто VIN12345 (10 дней)'", max_length=500, verbose_name='Описание')),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена за единицу')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Автоматически рассчитывается: количество × цена', max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items_new', to='core.car', verbose_name='Автомобиль')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.newinvoice', verbose_name='Инвойс')),
            ],
            options={
                'verbose_name': 'Позиция инвойса',
                'verbose_name_plural': 'Позиции инвойса',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер транзакции')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время')),
                ('type', models.CharField(choices=[('PAYMENT', 'Платеж'), ('REFUND', 'Возврат'), ('ADJUSTMENT', 'Корректировка'), ('TRANSFER', 'Перевод'), ('BALANCE_TOPUP', 'Пополнение баланса')], max_length=20, verbose_name='Тип операции')),
                ('method', models.CharField(choices=[('CASH', 'Наличные'), ('CARD', 'Банковская карта'), ('TRANSFER', 'Банковский перевод'), ('BALANCE', 'Списание с баланса'), ('OTHER', 'Другое')], max_length=20, verbose_name='Способ оплаты')),
                ('status', models.CharField(choices=[('PENDING', 'В ожидании'), ('COMPLETED', 'Завершена'), ('FAILED', 'Ошибка'), ('CANCELLED', 'Отменена')], default='COMPLETED', max_length=20, verbose_name='Статус')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма')),
                ('description', models.TextField(help_text='Подробное описание операции', verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_transactions_new', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('from_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_sent_new', to='core.carrier', verbose_name='От перевозчика')),
                ('from_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_sent_new', to='core.client', verbose_name='От клиента')),
                ('from_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_sent_new', to='core.company', verbose_name='От компании')),
                ('from_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_sent_new', to='core.line', verbose_name='От линии')),
                ('from_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_sent_new', to='core.warehouse', verbose_name='От склада')),
                ('invoice', models.ForeignKey(blank=True, help_text='Если это оплата инвойса, указываем его здесь', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='core.newinvoice', verbose_name='Инвойс')),
                ('to_carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_received_new', to='core.carrier', verbose_name='Перевозчику')),
                ('to_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_received_new', to='core.client', verbose_name='Клиенту')),
                ('to_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_received_new', to='core.company', verbose_name='Компании')),
                ('to_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_received_new', to='core.line', verbose_name='Линии')),
                ('to_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions_received_new', to='core.warehouse', verbose_name='Складу')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['number'], name='core_newinv_number_690a36_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['status', 'date'], name='core_newinv_status_8bef71_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['due_date', 'status'], name='core_newinv_due_dat_c36d64_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['recipient_client', 'status'], name='core_newinv_recipie_a23f18_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['recipient_warehouse', 'status'], name='core_newinv_recipie_0231c4_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['recipient_line', 'status'], name='core_newinv_recipie_45b40f_idx'),
        ),
        migrations.AddIndex(
            model_name='newinvoice',
            index=models.Index(fields=['recipient_carrier', 'status'], name='core_newinv_recipie_60cdd7_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['invoice', 'order'], name='core_invoic_invoice_68a42e_idx'),
        ),
        migrations.AddIndex(
            model_name='invoiceitem',
            index=models.Index(fields=['car'], name='core_invoic_car_id_2f43e2_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['number'], name='core_transa_number_698fab_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['date', 'type'], name='core_transa_date_39873f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['invoice'], name='core_transa_invoice_dc6218_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_client', 'date'], name='core_transa_from_cl_8cb51c_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_client', 'date'], name='core_transa_to_clie_05ccba_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_warehouse', 'date'], name='core_transa_from_wa_80e10a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_warehouse', 'date'], name='core_transa_to_ware_67ff77_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_line', 'date'], name='core_transa_from_li_637047_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_line', 'date'], name='core_transa_to_line_3edecb_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_carrier', 'date'], name='core_transa_from_ca_b606db_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_carrier', 'date'], name='core_transa_to_carr_ba8fd6_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_company', 'date'], name='core_transa_from_co_3383ac_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_company', 'date'], name='core_transa_to_comp_d5aa4b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'date'], name='core_transa_status_a0d663_idx'),
        ),
    ]
