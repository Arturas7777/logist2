"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—É–º–º
"""

from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from decimal import Decimal

from core.models import Car, Client, Warehouse, InvoiceOLD as Invoice
from core.services.comparison_service import ComparisonService


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—É–º–º –º–µ–∂–¥—É —Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏ —Å—á–µ—Ç–∞–º–∏ —Å–∫–ª–∞–¥–∞'

    def add_arguments(self, parser):
        parser.add_argument(
            '--days',
            type=int,
            default=30,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)'
        )
        parser.add_argument(
            '--client-id',
            type=int,
            help='ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        )
        parser.add_argument(
            '--warehouse-id',
            type=int,
            help='ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∫–ª–∞–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS('üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—É–º–º...')
        )
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        end_date = timezone.now().date()
        start_date = end_date - timedelta(days=options['days'])
        
        self.stdout.write(f"üìÖ –ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: {start_date} - {end_date}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        comparison_service = ComparisonService()
        
        # –û–±—â–∏–π –æ—Ç—á–µ—Ç
        self.stdout.write("\n" + "="*60)
        self.stdout.write("üìä –û–ë–©–ò–ô –û–¢–ß–ï–¢")
        self.stdout.write("="*60)
        
        report = comparison_service.get_comparison_report(start_date, end_date)
        
        self.stdout.write(f"üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {report['summary']['cars_count']}")
        self.stdout.write(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {report['summary']['cars_total']:.2f} ‚Ç¨")
        self.stdout.write(f"üìÑ –ò–Ω–≤–æ–π—Å–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {report['summary']['invoices_count']}")
        self.stdout.write(f"üí≥ –û–±—â–∞—è —Å—É–º–º–∞ –∏–Ω–≤–æ–π—Å–æ–≤: {report['summary']['invoices_total']:.2f} ‚Ç¨")
        self.stdout.write(f"üí∏ –ü–ª–∞—Ç–µ–∂–µ–π –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ: {report['summary']['payments_count']}")
        self.stdout.write(f"üíµ –û–±—â–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π: {report['summary']['payments_total']:.2f} ‚Ç¨")
        
        # –†–∞–∑–Ω–∏—Ü—ã
        cars_vs_invoices_diff = report['summary']['cars_vs_invoices_difference']
        invoices_vs_payments_diff = report['summary']['invoices_vs_payments_difference']
        
        if cars_vs_invoices_diff != 0:
            color = self.style.WARNING if abs(cars_vs_invoices_diff) < 100 else self.style.ERROR
            self.stdout.write(
                color(f"‚ö†Ô∏è  –†–∞–∑–Ω–∏—Ü–∞ (–∞–≤—Ç–æ–º–æ–±–∏–ª–∏ - –∏–Ω–≤–æ–π—Å—ã): {cars_vs_invoices_diff:.2f} ‚Ç¨")
            )
        else:
            self.stdout.write(
                self.style.SUCCESS("‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏–Ω–≤–æ–π—Å–∞–º–∏")
            )
        
        if invoices_vs_payments_diff != 0:
            color = self.style.WARNING if abs(invoices_vs_payments_diff) < 100 else self.style.ERROR
            self.stdout.write(
                color(f"‚ö†Ô∏è  –†–∞–∑–Ω–∏—Ü–∞ (–∏–Ω–≤–æ–π—Å—ã - –ø–ª–∞—Ç–µ–∂–∏): {invoices_vs_payments_diff:.2f} ‚Ç¨")
            )
        else:
            self.stdout.write(
                self.style.SUCCESS("‚úÖ –°—É–º–º–∞ –∏–Ω–≤–æ–π—Å–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏")
            )
        
        # –ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π
        self.stdout.write("\n" + "="*60)
        self.stdout.write("üö® –ü–û–ò–°–ö –†–ê–°–•–û–ñ–î–ï–ù–ò–ô")
        self.stdout.write("="*60)
        
        discrepancies = comparison_service.find_discrepancies(start_date, end_date)
        
        if discrepancies:
            self.stdout.write(
                self.style.WARNING(f"–ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π: {len(discrepancies)}")
            )
            
            for i, discrepancy in enumerate(discrepancies[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                self.stdout.write(f"\n{i}. {discrepancy['type'].upper()}: {discrepancy['entity']}")
                self.stdout.write(f"   üìù {discrepancy['comparison']['message']}")
                
                if discrepancy['type'] == 'client_comparison':
                    comp = discrepancy['comparison']
                    self.stdout.write(
                        f"   üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {comp['cars_count']} | "
                        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {comp['cars_total_cost']:.2f}‚Ç¨ | "
                        f"–ò–Ω–≤–æ–π—Å—ã: {comp['warehouse_invoices_total']:.2f}‚Ç¨"
                    )
                elif discrepancy['type'] == 'warehouse_comparison':
                    comp = discrepancy['comparison']
                    self.stdout.write(
                        f"   üìÑ –ò–Ω–≤–æ–π—Å–æ–≤: {comp['invoices_count']} | "
                        f"–°—É–º–º–∞: {comp['invoices_total']:.2f}‚Ç¨ | "
                        f"–ü–ª–∞—Ç–µ–∂–∏: {comp['payments_total']:.2f}‚Ç¨"
                    )
            
            if len(discrepancies) > 10:
                self.stdout.write(f"\n... –∏ –µ—â–µ {len(discrepancies) - 10} —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π")
        else:
            self.stdout.write(self.style.SUCCESS("‚úÖ –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"))
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        if options['client_id']:
            self.stdout.write("\n" + "="*60)
            self.stdout.write("üë§ –ê–ù–ê–õ–ò–ó –ö–õ–ò–ï–ù–¢–ê")
            self.stdout.write("="*60)
            
            try:
                client = Client.objects.get(id=options['client_id'])
                self.stdout.write(f"–ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç–∞: {client.name}")
                
                comparison = comparison_service.compare_client_costs_with_warehouse_invoices(
                    client, start_date, end_date
                )
                
                self.stdout.write(f"üìù –°—Ç–∞—Ç—É—Å: {comparison['status']}")
                self.stdout.write(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {comparison['message']}")
                
                if comparison['status'] != 'no_data':
                    self.stdout.write(f"üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {comparison['cars_count']}")
                    self.stdout.write(f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {comparison['cars_total_cost']:.2f} ‚Ç¨")
                    self.stdout.write(f"üìÑ –°—É–º–º–∞ –∏–Ω–≤–æ–π—Å–æ–≤ —Å–∫–ª–∞–¥–∞: {comparison['warehouse_invoices_total']:.2f} ‚Ç¨")
                    self.stdout.write(f"üìä –†–∞–∑–Ω–∏—Ü–∞: {comparison['difference']:.2f} ‚Ç¨")
                
            except Client.DoesNotExist:
                self.stdout.write(
                    self.style.ERROR(f"‚ùå –ö–ª–∏–µ–Ω—Ç —Å ID {options['client_id']} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                )
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∫–ª–∞–¥–∞
        if options['warehouse_id']:
            self.stdout.write("\n" + "="*60)
            self.stdout.write("üè¢ –ê–ù–ê–õ–ò–ó –°–ö–õ–ê–î–ê")
            self.stdout.write("="*60)
            
            try:
                warehouse = Warehouse.objects.get(id=options['warehouse_id'])
                self.stdout.write(f"–ê–Ω–∞–ª–∏–∑ —Å–∫–ª–∞–¥–∞: {warehouse.name}")
                
                comparison = comparison_service.compare_warehouse_costs_with_payments(
                    warehouse, start_date, end_date
                )
                
                self.stdout.write(f"üìù –°—Ç–∞—Ç—É—Å: {comparison['status']}")
                self.stdout.write(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {comparison['message']}")
                
                if comparison['status'] != 'no_data':
                    self.stdout.write(f"üìÑ –ò–Ω–≤–æ–π—Å–æ–≤: {comparison['invoices_count']}")
                    self.stdout.write(f"üí∞ –°—É–º–º–∞ –∏–Ω–≤–æ–π—Å–æ–≤: {comparison['invoices_total']:.2f} ‚Ç¨")
                    self.stdout.write(f"üí≥ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π: {comparison['payments_total']:.2f} ‚Ç¨")
                    self.stdout.write(f"üìä –†–∞–∑–Ω–∏—Ü–∞: {comparison['difference']:.2f} ‚Ç¨")
                
            except Warehouse.DoesNotExist:
                self.stdout.write(
                    self.style.ERROR(f"‚ùå –°–∫–ª–∞–¥ —Å ID {options['warehouse_id']} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                )
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π (–ø—Ä–∏–º–µ—Ä—ã)
        self.stdout.write("\n" + "="*60)
        self.stdout.write("üöó –ê–ù–ê–õ–ò–ó –ê–í–¢–û–ú–û–ë–ò–õ–ï–ô (–ø—Ä–∏–º–µ—Ä—ã)")
        self.stdout.write("="*60)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        cars = Car.objects.filter(
            unload_date__gte=start_date,
            unload_date__lte=end_date
        ).select_related('client', 'warehouse')[:5]
        
        if cars.exists():
            for car in cars:
                comparison = comparison_service.compare_car_costs_with_warehouse_invoices(car)
                
                status_style = self.style.SUCCESS if comparison['status'] == 'match' else self.style.WARNING
                
                self.stdout.write(f"\nüöó {car.vin} ({car.brand} {car.year})")
                self.stdout.write(f"   üë§ –ö–ª–∏–µ–Ω—Ç: {car.client.name if car.client else 'N/A'}")
                self.stdout.write(f"   üè¢ –°–∫–ª–∞–¥: {car.warehouse.name if car.warehouse else 'N/A'}")
                self.stdout.write(status_style(f"   üìù –°—Ç–∞—Ç—É—Å: {comparison['status']}"))
                self.stdout.write(f"   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {comparison['car_total_cost']:.2f} ‚Ç¨")
                self.stdout.write(f"   üìÑ –ò–Ω–≤–æ–π—Å—ã —Å–∫–ª–∞–¥–∞: {comparison['warehouse_invoices_total']:.2f} ‚Ç¨")
                self.stdout.write(f"   üìä –†–∞–∑–Ω–∏—Ü–∞: {comparison['difference']:.2f} ‚Ç¨")
        else:
            self.stdout.write("‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        self.stdout.write("\n" + "="*60)
        self.stdout.write(self.style.SUCCESS("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"))
        self.stdout.write("="*60)
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        self.stdout.write("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        self.stdout.write("‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–∞—à–±–æ—Ä–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: /comparison-dashboard/")
        self.stdout.write("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: /api/compare-car-costs/")
        self.stdout.write("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è—Ö")
        self.stdout.write("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –∏–Ω–≤–æ–π—Å–æ–≤")

