#!/bin/bash

# ========================================
# ПРОВЕРКА СЕРВЕРА НА ВЗЛОМ И ВРЕДОНОСНОЕ ПО
# ========================================

echo "========================================="
echo "  ПРОВЕРКА НА КОМПРОМЕТАЦИЮ"
echo "========================================="
echo ""

RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'

REPORT="/tmp/security_audit_$(date +%Y%m%d_%H%M%S).txt"

log_check() {
    echo "$1" | tee -a "$REPORT"
}

log_warning() {
    echo -e "${YELLOW}⚠ $1${NC}" | tee -a "$REPORT"
}

log_error() {
    echo -e "${RED}✗ $1${NC}" | tee -a "$REPORT"
}

log_ok() {
    echo -e "${GREEN}✓ $1${NC}" | tee -a "$REPORT"
}

# ================================
# 1. ПРОВЕРКА ПОДОЗРИТЕЛЬНЫХ ПРОЦЕССОВ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "1. Подозрительные процессы"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Процессы с высоким CPU от неизвестных пользователей
log_check "Процессы с CPU > 50%:"
ps aux --sort=-%cpu | head -10 | tee -a "$REPORT"

# Скрытые процессы (пробелы в именах, странные символы)
log_check ""
log_check "Процессы со странными именами:"
ps aux | grep -E "^ |  | $|[[:cntrl:]]" | tee -a "$REPORT" || log_ok "Не найдено"

# Процессы, слушающие сеть от непривилегированных пользователей
log_check ""
log_check "Сетевые процессы от непривилегированных пользователей:"
if command -v ss >/dev/null 2>&1; then
    ss -tulpn | grep -v "root\|www-root\|postgres" | tee -a "$REPORT" || log_ok "Не найдено"
else
    log_warning "Команда ss не найдена"
fi

echo ""

# ================================
# 2. ПРОВЕРКА ОТКРЫТЫХ ПОРТОВ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "2. Неожиданные открытые порты"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

if command -v ss >/dev/null 2>&1; then
    log_check "Все listening порты:"
    ss -tulpn | grep LISTEN | tee -a "$REPORT"
    
    # Проверка на подозрительные порты
    log_check ""
    log_check "Проверка известных backdoor портов (31337, 12345, 6667, 6666):"
    if ss -tulpn | grep -E ":(31337|12345|6667|6666|4444|5555) " >/dev/null; then
        log_error "НАЙДЕНЫ ПОДОЗРИТЕЛЬНЫЕ ПОРТЫ!"
        ss -tulpn | grep -E ":(31337|12345|6667|6666|4444|5555) " | tee -a "$REPORT"
    else
        log_ok "Подозрительные порты не найдены"
    fi
else
    log_warning "Команда ss не найдена"
fi

echo ""

# ================================
# 3. ПРОВЕРКА CRON ЗАДАЧ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "3. Подозрительные cron задачи"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Cron задачи root:"
crontab -l 2>/dev/null | tee -a "$REPORT" || log_check "Нет задач"

log_check ""
log_check "Системные cron задачи:"
cat /etc/crontab 2>/dev/null | tee -a "$REPORT"

log_check ""
log_check "Cron в /etc/cron.d/:"
ls -la /etc/cron.d/ 2>/dev/null | tee -a "$REPORT"

# Проверка на подозрительные команды в cron
log_check ""
log_check "Поиск подозрительных команд (wget, curl к неизвестным хостам):"
if grep -r "wget\|curl" /etc/cron* /var/spool/cron* 2>/dev/null | grep -v "ispmanager\|logist2"; then
    log_warning "Найдены задачи с wget/curl - проверьте вручную!"
else
    log_ok "Подозрительных задач не найдено"
fi

echo ""

# ================================
# 4. ПРОВЕРКА SSH
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "4. Проверка SSH"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Неизвестные SSH ключи в authorized_keys:"
for user_home in /home/* /root; do
    if [ -f "$user_home/.ssh/authorized_keys" ]; then
        log_check ""
        log_check "Пользователь: $user_home"
        cat "$user_home/.ssh/authorized_keys" | tee -a "$REPORT"
    fi
done

log_check ""
log_check "История последних SSH входов:"
last -20 | tee -a "$REPORT"

log_check ""
log_check "Успешные SSH входы за последние 7 дней:"
grep "Accepted" /var/log/auth.log* 2>/dev/null | tail -50 | tee -a "$REPORT"

echo ""

# ================================
# 5. ПРОВЕРКА ПОЛЬЗОВАТЕЛЕЙ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "5. Подозрительные пользователи"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Пользователи с UID 0 (root права):"
awk -F: '($3 == 0) {print}' /etc/passwd | tee -a "$REPORT"
if [ $(awk -F: '($3 == 0) {print}' /etc/passwd | wc -l) -gt 1 ]; then
    log_error "НАЙДЕНЫ ДОПОЛНИТЕЛЬНЫЕ ПОЛЬЗОВАТЕЛИ С ROOT!"
fi

log_check ""
log_check "Пользователи без пароля:"
awk -F: '($2 == "") {print $1}' /etc/shadow 2>/dev/null | tee -a "$REPORT"

log_check ""
log_check "Недавно созданные пользователи (за последние 30 дней):"
find /home -maxdepth 1 -type d -mtime -30 -ls 2>/dev/null | tee -a "$REPORT"

echo ""

# ================================
# 6. ПРОВЕРКА SYSTEMD СЕРВИСОВ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "6. Подозрительные сервисы"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Все запущенные сервисы:"
systemctl list-units --type=service --state=running --no-pager | tee -a "$REPORT"

log_check ""
log_check "Недавно измененные systemd unit файлы (за 30 дней):"
find /etc/systemd/system /lib/systemd/system -type f -mtime -30 -ls 2>/dev/null | tee -a "$REPORT"

echo ""

# ================================
# 7. ПРОВЕРКА СЕТЕВЫХ СОЕДИНЕНИЙ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "7. Активные сетевые соединения"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

if command -v ss >/dev/null 2>&1; then
    log_check "ESTABLISHED соединения:"
    ss -tunp | grep ESTAB | tee -a "$REPORT"
    
    log_check ""
    log_check "Исходящие соединения к нестандартным портам:"
    ss -tunp | grep ESTAB | grep -v ":80\|:443\|:22\|:53\|:123" | tee -a "$REPORT" || log_ok "Не найдено"
fi

echo ""

# ================================
# 8. ПРОВЕРКА ИЗМЕНЕННЫХ СИСТЕМНЫХ ФАЙЛОВ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "8. Недавно измененные критичные файлы"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Изменения в /etc за последние 7 дней:"
find /etc -type f -mtime -7 -ls 2>/dev/null | grep -v "cache\|shadow-\|passwd-" | head -20 | tee -a "$REPORT"

log_check ""
log_check "Изменения в /bin, /sbin, /usr/bin за последние 30 дней:"
find /bin /sbin /usr/bin -type f -mtime -30 -ls 2>/dev/null | head -10 | tee -a "$REPORT"

log_check ""
log_check "Файлы с SUID bit (могут быть использованы для privilege escalation):"
find / -perm -4000 -type f 2>/dev/null | tee -a "$REPORT"

echo ""

# ================================
# 9. ПРОВЕРКА ВЕБА
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "9. Проверка веб-директорий"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Подозрительные PHP/скрипт файлы в веб-директории (eval, base64_decode, shell_exec):"
if [ -d "/var/www/www-root/data/www/logist2" ]; then
    find /var/www/www-root/data/www/logist2 -type f \( -name "*.php" -o -name "*.py" \) -exec grep -l "eval\|base64_decode\|shell_exec\|system\|passthru" {} \; 2>/dev/null | tee -a "$REPORT" || log_ok "Не найдено"
fi

log_check ""
log_check "Недавно измененные файлы в веб-директории (за 7 дней):"
if [ -d "/var/www/www-root/data/www/logist2" ]; then
    find /var/www/www-root/data/www/logist2 -type f -mtime -7 -ls 2>/dev/null | grep -v ".pyc\|__pycache__\|.git\|staticfiles" | head -20 | tee -a "$REPORT"
fi

echo ""

# ================================
# 10. ПРОВЕРКА ЛОГОВ НА ВТОРЖЕНИЯ
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "10. Анализ логов на признаки взлома"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "Успешные входы от root за последний месяц:"
grep "Accepted password for root" /var/log/auth.log* 2>/dev/null | wc -l | tee -a "$REPORT"

log_check ""
log_check "Попытки выполнения sudo:"
grep "sudo:" /var/log/auth.log* 2>/dev/null | tail -20 | tee -a "$REPORT"

log_check ""
log_check "Попытки эксплойтов в веб-логах (SQL injection, LFI, RFI):"
if [ -f "/var/log/nginx/access.log" ]; then
    grep -E "union.*select|concat.*0x|information_schema|\.\.\/|etc\/passwd|eval\(|base64" /var/log/nginx/access.log* 2>/dev/null | tail -20 | tee -a "$REPORT" || log_ok "Не найдено"
fi

echo ""

# ================================
# 11. ПРОВЕРКА ROOTKITS
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "11. Быстрая проверка на rootkits"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# Проверка на известные rootkit директории
log_check "Проверка известных rootkit директорий:"
ROOTKIT_DIRS="/dev/shm/.ice /dev/shm/.X11-unix /tmp/.ICE-unix /tmp/.X11-unix"
for dir in $ROOTKIT_DIRS; do
    if [ -d "$dir" ] && [ "$(ls -A $dir 2>/dev/null)" ]; then
        log_warning "Найдена подозрительная директория: $dir"
        ls -la "$dir" | tee -a "$REPORT"
    fi
done

# Проверка на скрытые процессы (расхождение между /proc и ps)
log_check ""
log_check "Проверка на скрытые процессы:"
PROC_COUNT=$(ls -d /proc/[0-9]* 2>/dev/null | wc -l)
PS_COUNT=$(ps aux | wc -l)
if [ $((PROC_COUNT - PS_COUNT)) -gt 10 ]; then
    log_warning "ВНИМАНИЕ: Расхождение между /proc и ps: $PROC_COUNT vs $PS_COUNT"
else
    log_ok "Скрытых процессов не обнаружено"
fi

echo ""

# ================================
# 12. ПРОВЕРКА ИСТОРИИ КОМАНД
# ================================
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
log_check "12. Подозрительные команды в истории"
log_check "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

log_check "История команд root (последние 50):"
tail -50 /root/.bash_history 2>/dev/null | tee -a "$REPORT" || log_check "История недоступна"

log_check ""
log_check "Поиск опасных команд в истории (wget, curl, nc, base64):"
grep -E "wget|curl|nc |base64|/dev/tcp|python.*-c|perl.*-e" /root/.bash_history /home/*/.bash_history 2>/dev/null | tee -a "$REPORT" || log_ok "Не найдено"

echo ""

# ================================
# ИТОГОВЫЙ ОТЧЕТ
# ================================
log_check "========================================="
log_check "  ПРОВЕРКА ЗАВЕРШЕНА"
log_check "========================================="
log_check ""
log_check "Полный отчет сохранен в: $REPORT"
log_check ""
log_check "РЕКОМЕНДАЦИИ:"
log_check "1. Внимательно изучите все предупреждения (⚠) и ошибки (✗)"
log_check "2. Проверьте все неизвестные процессы и открытые порты"
log_check "3. Проверьте SSH ключи и историю входов"
log_check "4. Если есть подозрения - установите chkrootkit или rkhunter"
log_check "5. Рассмотрите возможность полной переустановки если найдены backdoors"
log_check ""
log_check "Для детальной проверки выполните:"
log_check "  apt install chkrootkit rkhunter -y"
log_check "  chkrootkit"
log_check "  rkhunter --check"
log_check ""

